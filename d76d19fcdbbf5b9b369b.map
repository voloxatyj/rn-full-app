{"version":3,"sources":["E:/WhatIdo/test/@rn-full-app/components/ItemInput.js","E:/WhatIdo/test/@rn-full-app/components/ListItems.js","E:/WhatIdo/test/@rn-full-app/global/styles.js","E:/WhatIdo/test/@rn-full-app/components/Header.js","E:/WhatIdo/test/@rn-full-app/components/Card.js","E:/WhatIdo/test/@rn-full-app/components/Input.js","E:/WhatIdo/test/@rn-full-app/components/Number.js","E:/WhatIdo/test/@rn-full-app/screens/StartGameScreen.js","E:/WhatIdo/test/@rn-full-app/screens/GameScreen.js","E:/WhatIdo/test/@rn-full-app/screens/GameOverScreen.js","E:/WhatIdo/test/@rn-full-app/Game.js","E:/WhatIdo/test/@rn-full-app/App.js","E:/WhatIdo/test/@rn-full-app/web-build/register-service-worker.js"],"names":["styles","StyleSheet","create","input","padding","width","borderColor","borderWidth","marginBottom","inputContainer","flex","justifyContent","alignItems","btnContainer","flexDirection","btn","ItemInput","props","useState","text","setText","Modal","visible","state","animationType","View","style","TextInput","placeholder","onChangeText","value","Button","title","onPress","handleAddItem","color","cancelBtn","listItem","marginVertical","backgroundColor","ListItems","TouchableOpacity","activeOpacity","handleOnDelete","bind","id","Text","header","height","Styles","fontSize","fontStyle","fontWeight","Header","card","shadowOffset","shadowColor","shadowRadius","shadowOpacity","elevation","borderRadius","Card","children","borderBottomColor","borderBottomWidth","Input","container","number","Number","screen","paddingHorizontal","paddingVertical","maxWidth","textAlign","summaryContainer","marginTop","StartGame","confirmOutPut","setValue","confirm","setConfirm","setNumber","resetInputHandler","Keyboard","dismiss","onStartGame","blurOnSubmit","autoCapitalize","keyboardType","maxlength","replace","chosenNumber","parseInt","isNaN","Alert","alert","getRndNumber","min","max","exclude","Math","ceil","floor","rndNumb","random","GameScreen","userNumber","guessNumber","setGuessNumber","rounds","setRounds","currentLow","useRef","currentHigh","onGameOver","useEffect","nextGuessHandler","direction","current","nextNumber","GameOverScreen","onRestart","Game","setUserNumber","content","StartGameScreen","selectedNum","numOfRounds","btnOpenGame","App","items","setItems","openModal","setOpenModal","openGame","setOpenGame","prevItems","filter","item","MaterialIcons","name","size","prevText","uuid","FlatList","data","keyExtractor","renderItem","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.e125e26d.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport { StyleSheet, TextInput, View, Button, Modal } from 'react-native';\r\n\r\n\r\nconst ItemInput = props => {\r\n\tconst [text, setText] = useState('');\r\n\t\r\n\tconst handleChangeText = text => setText(text);\r\n\r\n\tconst onAddItem = () => {\r\n\t\tprops.handleAddItem(text);\r\n\t\tsetText('');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal visible={props.state} animationType=\"slide\">\r\n\t\t\t<View style={styles.inputContainer}>\r\n\t\t\t\t<TextInput \r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tplaceholder=\"please enter item name\"\r\n\t\t\t\t\tonChangeText={handleChangeText}\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t/>\r\n\t\t\t\t<View style={styles.btnContainer}>\r\n\t\t\t\t\t<View style={styles.btn}>\r\n\t\t\t\t\t\t<Button title=\"add\" onPress={onAddItem}/>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<View style={styles.btn}>\r\n\t\t\t\t\t\t<Button title=\"cancel\" color=\"red\" onPress={props.cancelBtn} />\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tinput: {\r\n\t\tpadding: 10,\r\n\t\twidth: '80%',\r\n\t\tborderColor: 'black',\r\n\t\tborderWidth: 1,\r\n\t\tmarginBottom: 10,\r\n\t},\r\n\tinputContainer: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tbtnContainer: {\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'space-around',\r\n\t\twidth: '80%',\r\n\t},\r\n\tbtn: {\r\n\t\twidth: '40%',\r\n\t},\r\n})\r\n\r\nexport default ItemInput;","import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nconst ListItems = props => {\r\n\treturn (\r\n\t\t\t<TouchableOpacity activeOpacity={0.8} onPress={props.handleOnDelete.bind(this, props.id)}>\r\n\t\t\t\t<View style={styles.listItem}>\r\n\t\t\t\t\t<Text>{props.text}</Text>\r\n\t\t\t\t</View>\r\n\t\t\t</TouchableOpacity>\r\n\t)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tlistItem: {\r\n\t\tpadding: 10,\r\n\t\tmarginVertical: 10,\r\n\t\tbackgroundColor: '#ccc',\r\n\t\tborderColor: 'black',\r\n\t\tborderWidth: 1,\r\n\t},\r\n})\r\n\r\nexport default ListItems;","export default {\r\n\tprimary: '#f7287b',\r\n\tsecondary: '#c717fc',\r\n};","import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport Styles from '../global/styles';\r\n\r\nconst Header = props => {\r\n\treturn(\r\n\t\t<View style={styles.header}> \r\n\t\t\t<Text style={styles.title}>{props.title}</Text>\r\n\t\t</View>\r\n\t)\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\theader: {\r\n\t\twidth: '100%',\r\n\t\theight: 90,\r\n\t\tbackgroundColor: Styles.primary,\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'black',\r\n\t\tfontSize: 25,\r\n\t\tfontStyle: 'italic',\r\n\t\tfontWeight: 'bold',\r\n\t},\r\n});\r\n\r\nexport default Header;","import React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\n\r\nconst Card = props => {\r\n\treturn (\r\n\t<View style={{...styles.card, ...props.style} }>{props.children}</View>\r\n\t)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcard: {\r\n\t\theight: 200,\r\n\t\twidth: 200,\r\n\t\tshadowOffset: { width: 0, height: 2 },\r\n\t\tshadowColor: 'black',\r\n\t\tshadowRadius: 6,\r\n\t\tshadowOpacity: 0.26,\r\n\t\tbackgroundColor: 'white',\r\n\t\televation: 5,\r\n\t\tpadding: 20,\r\n\t\tborderRadius: 10,\r\n\t},\r\n});\r\n\r\nexport default Card;","import React from 'react';\r\nimport { TextInput, StyleSheet } from 'react-native';\r\n\r\nconst Input = props => {\r\n\treturn (\r\n\t<TextInput \r\n\t{...props}\r\n\tstyle={{...styles.input,...props.styles}} \r\n\t/>\r\n\t)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tinput: {\r\n\t\theight: 30,\r\n\t\tborderBottomColor: 'grey',\r\n\t\tborderBottomWidth: 1,\r\n\t\tmarginVertical: 10,\r\n\t},\r\n});\r\n\r\nexport default Input;","import React from 'react';\r\nimport { View , Text, StyleSheet } from 'react-native';\r\nimport Styles from '../global/styles';\r\n\r\nconst Number = props => {\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<Text style={styles.number}>{props.children}</Text>\r\n\t\t</View>\r\n\t)\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tborderWidth: 2,\r\n\t\tborderColor: Styles.secondary,\r\n\t\tpadding: 10,\r\n\t\tborderRadius: 10,\r\n\t\tmarginVertical: 10,\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n\tnumber: {\r\n\t\tcolor: Styles.secondary,\r\n\t\tfontSize: 22,\r\n\t}\r\n});\r\n\r\nexport default Number;","import React, {useState} from 'react';\r\nimport { View, StyleSheet, Text, Button, Keyboard, Alert } from 'react-native';\r\nimport Card from '../components/Card';\r\nimport Styles from '../global/styles';\r\nimport Input from '../components/Input';\r\nimport Number from '../components/Number';\r\n\r\nconst StartGame = props => {\r\n\tconst [value, setValue] = useState('');\r\n\tconst [confirm, setConfirm] = useState(false);\r\n\tconst [number, setNumber] = useState();\r\n\r\n\tconst numberInput = number => {\r\n\t\treturn setValue(number.replace(/[^0-9]/g, ''))\r\n\t}\r\n\r\n\tconst resetInputHandler = () => {\r\n\t\tsetValue('');\r\n\t\tsetConfirm(false);\r\n\t\tKeyboard.dismiss();\r\n\t}\r\n\r\n\tconst confirmInputHandler = () => {\r\n\t\tconst chosenNumber = parseInt(value)\r\n\t\tif(isNaN(chosenNumber) || chosenNumber <=0 || chosenNumber>99){\r\n\t\t\tAlert.alert('Invalid number', 'Number must be between from 1 to 99.',[{text:'Okay', style:'destructive', onPress: resetInputHandler}])\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetConfirm(true);\r\n\t\tsetValue('');\r\n\t\tKeyboard.dismiss();\r\n\t\tsetNumber(chosenNumber);\r\n\t}\r\n\r\n\tlet confirmOutPut;\r\n\r\n\tif(confirm){\r\n\tconfirmOutPut = (\r\n\t\t<Card style={styles.summaryContainer}>\r\n\t\t\t<Text>You selected</Text>\r\n\t\t\t<Number>{number}</Number>\r\n\t\t\t<View style={styles.btn}>\r\n\t\t\t\t<Button title=\"START GAME\" onPress={()=>props.onStartGame(number)} />\r\n\t\t\t</View>\r\n\t\t</Card>\r\n\t)}\r\n\r\n\treturn (\r\n\t\t<View style={styles.screen}>\r\n\t\t\t<Text style={styles.title}>Start a new Game!</Text>\r\n\t\t\t<Card style={styles.inputContainer}>\r\n\t\t\t\t<Text>Select a Number</Text>\r\n\t\t\t\t<Input \r\n\t\t\t\tstyle={styles.input} \r\n\t\t\t\tblurOnSubmit \r\n\t\t\t\tautoCapitalize=\"none\"\r\n\t\t\t\tkeyboardType=\"number-pad\"\r\n\t\t\t\tmaxlength={2}\r\n\t\t\t\tonChangeText={numberInput}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\t/>\r\n\t\t\t\t<View style={styles.btnContainer}>\r\n\t\t\t\t\t<View style={styles.btn}>\r\n\t\t\t\t\t\t<Button title=\"Reset\" onPress={resetInputHandler} color={Styles.secondary}/>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<View style={styles.btn}>\r\n\t\t\t\t\t\t<Button title=\"Confirm\" onPress={confirmInputHandler} color={Styles.primary}/>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\t\t\t</Card>\r\n\t\t\t{confirmOutPut}\r\n\t\t</View>\r\n\t)\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tscreen: {\r\n\t\tflex: 1,\r\n\t\tpadding: 10,\r\n\t\talignItems: 'center',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 20,\r\n\t\tmarginVertical: 10,\r\n\t},\r\n\tbtnContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\twidth: '100%',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpaddingHorizontal: 15,\r\n\t\tpaddingVertical: 25,\r\n\t},\r\n\tinputContainer: {\r\n\t\twidth: 300,\r\n\t\tmaxWidth: '80%',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tbtn: {\r\n\t\twidth: 100,\r\n\t\tmarginVertical: 20,\r\n\t},\r\n\tinput: {\r\n\t\twidth: 50,\r\n\t\tpaddingVertical: 30,\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tsummaryContainer: {\r\n\t\tmarginTop: 20,\r\n\t\talignItems: 'center',\r\n\t},\r\n});\r\n\r\nexport default StartGame;","import React, { useState, useRef, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Button, Alert } from 'react-native';\r\nimport Number from '../components/Number';\r\nimport Card from '../components/Card';\r\n\r\n\r\nconst getRndNumber = (min, max, exclude) => {\r\n\tmin = Math.ceil(min);\r\n\tmax = Math.floor(max);\r\n\tconst rndNumb = Math.floor(Math.random() * (max -min)) + min;\r\n\t\tif( rndNumb === exclude ) {\r\n\t\t\treturn getRndNumber(min, max, exclude)\r\n\t\t} else {\r\n\t\t\treturn rndNumb;\r\n\t\t}\r\n}\r\n\r\nconst GameScreen = props => {\r\n\tconst [guessNumber, setGuessNumber] = useState(getRndNumber(1,100,userNumber))\r\n\tconst [rounds, setRounds] = useState(0);\r\n\r\n\tconst currentLow = useRef(1);\r\n\tconst currentHigh = useRef(100);\r\n\r\n\tconst { onGameOver, userNumber } = props;\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif ( guessNumber === userNumber) {\r\n\t\t\tonGameOver(rounds); \r\n\t\t}\r\n\t}, [ guessNumber, onGameOver, userNumber ]);\r\n\r\n\tconst nextGuessHandler = direction => {\r\n\t\tif (direction == \"lower\" && guessNumber < userNumber || (direction == \"greater\" && guessNumber > userNumber)) {\r\n\t\t\tAlert.alert('Dont\\' lie!', 'You know that this not true', [{text:'Sorry!', style: 'cancel'} ])\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(direction === 'lower') {\r\n\t\t\tcurrentHigh.current = guessNumber;\r\n\t\t} else {\r\n\t\t\tcurrentLow.current = guessNumber;\r\n\t\t}\r\n\t\tconst nextNumber = getRndNumber(currentLow.current, currentHigh.current, guessNumber);\r\n\t\tsetGuessNumber(nextNumber);\r\n\t\tsetRounds(rounds=>rounds+1);\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<View style={styles.screen}>\r\n\t\t\t<Text>Opponent’s choice</Text>\r\n\t\t\t<Number>{guessNumber}</Number>\r\n\t\t\t<Card style={styles.btnContainer}>\r\n\t\t\t\t<Button title=\"LOWER\" onPress={nextGuessHandler.bind(this,'lower')} />\r\n\t\t\t\t<Button title=\"GREATER\" onPress={nextGuessHandler.bind(this, 'greater')} />\r\n\t\t\t\t</Card>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tscreen: {\r\n\t\tflex: 1,\r\n\t\tpadding: 10,\r\n\t\talignItems: 'center',\r\n\t},\r\n\tbtnContainer: {\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'space-around',\r\n\t\tmarginTop: 20,\r\n\t\twidth: 300,\r\n\t\tmaxWidth: '80%',\r\n\t\theight: 80,\r\n\t},\r\n});\r\n\r\nexport default GameScreen;","import React from 'react';\r\nimport { View, Text, StyleSheet, Button } from 'react-native';\r\n\r\nconst GameOverScreen = props => {\r\n\treturn (\r\n\t\t<View style={styles.screen}>\r\n\t\t\t<Text style={styles.title}>The Game is Over!</Text>\r\n\t\t\t<Text style={styles.title}>Number of rounds: {props.rounds}</Text>\r\n\t\t\t<Text style={styles.title}>Number was: {props.userNumber}</Text>\r\n\t\t\t<View style={styles.btnContainer}>\r\n\t\t\t\t<Button \r\n\t\t\t\ttitle=\"START NEW GAME!\"\r\n\t\t\t\tonPress={props.onRestart}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tscreen: {\r\n\t\tflex: 1,\r\n\t\tmarginVertical: 200,\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 22,\r\n\t\tfontWeight: 'bold',\r\n\t\tfontStyle: 'italic',\r\n\t},\r\n\tbtnContainer: {\r\n\t\twidth: 150,\r\n\t\theight: 50,\r\n\t\tmarginTop: 50,\r\n\t},\r\n});\r\n\r\nexport default GameOverScreen;","import React,{useState} from 'react';\r\nimport {View, StyleSheet, Text} from 'react-native';\r\nimport Header from './components/Header';\r\nimport StartGameScreen from './screens/StartGameScreen';\r\nimport GameScreen from './screens/GameScreen';\r\nimport GameOverScreen from './screens/GameOverScreen';\r\n\r\n function Game() {\r\n\t const [userNumber, setUserNumber] = useState();\r\n\t const [rounds, setRounds] = useState(0);\r\n\r\n\t const startGame = selectedNum => {\r\n\t\tsetUserNumber(selectedNum);\r\n\t };\r\n\r\n\t const configureNewGame = () => {\r\n\t\t setRounds(0);\r\n\t\t setUserNumber(null);\r\n\t }\r\n\r\n\t const gameOver = numOfRounds => {\r\n\t\t setRounds(numOfRounds);\r\n\t }\r\n\r\n\t let content = <StartGameScreen onStartGame={startGame} />\r\n\r\n\t if (userNumber && rounds <=0) {\r\n\t\t content = <GameScreen\r\n\t\t userNumber={userNumber}\r\n\t\t onGameOver={gameOver}\r\n\t\t />\r\n\t } else if (rounds > 0) {\r\n\t\t content = <GameOverScreen\r\n\t\t\trounds={rounds}\r\n\t\t\tuserNumber={userNumber}\r\n\t\t\tonRestart={configureNewGame}\r\n\t\t\t/>;\r\n\t }\r\n\r\n\treturn (\r\n\t\t<View style={styles.screen}>\r\n\t\t\t<Header title=\"Guess a Number\" />\r\n\t\t\t{content}\r\n\t\t</View>\r\n\t)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tscreen: {\r\n\t\tflex: 1,\r\n\t},\r\n});\r\n\r\nexport default Game;","import React,{ useState } from 'react';\nimport { StyleSheet, View, Button, FlatList, Text } from 'react-native';\nimport { uuid } from 'uuidv4'; \nimport ItemInput from './components/ItemInput';\nimport ListItems from './components/ListItems';\nimport Game from './Game';\nimport { MaterialIcons } from '@expo/vector-icons';\n\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [openGame, setOpenGame] = useState(false);\n \n  const handleAddItem = text => {\n    setItems(prevText => [...prevText, {id:uuid(),value: text}])\n    setOpenModal(false);\n  }\n\n  const handleOnDelete = id => {\n  setItems(prevItems => { \n    return prevItems.filter((item) => item.id !== id);    \n    });\n  }\n\n  const cancelBtn = () => {\n    setOpenModal(false);\n  }\n  \n  let content;\n  const openWindowGame = () => {\n    openGame === false ? setOpenGame(true) : setOpenGame(false)\n  }\n\n  if (openGame) {\n      content = <Game />\n    }\n\n  return (\n    <View style={styles.container} >\n      <Button title=\"press to add item\" onPress={() => setOpenModal(true)} />\n      <View style={styles.btnOpenGame}>\n        <MaterialIcons name=\"gamepad\" size={40} onPress={openWindowGame} />\n      </View>\n      <View>\n        <ItemInput \n        handleAddItem={handleAddItem}\n        state={openModal}\n        cancelBtn={cancelBtn}\n        />\n      </View>\n        <FlatList \n          data={items}\n          keyExtractor={item => item.id}\n          renderItem={item => \n            <ListItems \n              id={item.item.id} \n              text={item.item.value} \n              handleOnDelete={handleOnDelete}\n            />\n          }\n        />\n        {content}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 50,\n  },\n  btnOpenGame: {\n    marginTop: 20,\n    marginBottom: 20,\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n  },\n});\n\nexport default App;","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/rn-full-app/expo-service-worker.js', { scope: '/rn-full-app/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}